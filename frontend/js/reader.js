// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–æ–º —á—Ç–µ–Ω–∏—è
const readerManager = {
    // –¢–µ–∫—É—â–∞—è –∫–Ω–∏–≥–∞ –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å
    currentBook: null,
    readingProgress: 0,
    // currentChapterIndex: 0,
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —á—Ç–µ–Ω–∏—è
    settings: {
        fontSize: 16,
        fontFamily: 'Arial, sans-serif',
        lineHeight: 1.6,
        textAlign: 'justify',
        marginSize: '20px',
        charsPerPage: 2000,    // –°—Ä–µ–¥–Ω–µ–µ –¥–ª—è –ê4
        currentPage: 0,
        totalPages: 0
    },
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    init: function() {
        this.loadSettings();
        this.setupEventListeners();
        this.applySettings();
        console.log('üìñ ReaderManager –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');
    },
    
    // –ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ localStorage
    loadSettings: function() {
        const savedSettings = utils.loadFromStorage('reader-settings');
        if (savedSettings) {
            this.settings = { ...this.settings, ...savedSettings };
        }
    },
    
    // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ localStorage
    saveSettings: function() {
        utils.saveToStorage('reader-settings', this.settings);
    },
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
    setupEventListeners: function() {
        // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —à—Ä–∏—Ñ—Ç–æ–º
        utils.on(utils.get('fontDecrease'), 'click', () => this.changeFontSize(-1));
        utils.on(utils.get('fontIncrease'), 'click', () => this.changeFontSize(1));
        
        // –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º
        const prevBtn = utils.get('prevChapter');
        const nextBtn = utils.get('nextChapter');
        
        if (prevBtn && !prevBtn.hasAttribute('data-listener-added')) {
            utils.on(prevBtn, 'click', (event) => {
                event.preventDefault();
                event.stopPropagation();
                console.log('üîº –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –Ω–∞–∂–∞—Ç–∞');
                this.navigateChapter(-1);
            });
            prevBtn.setAttribute('data-listener-added', 'true');
        }

        if (nextBtn && !nextBtn.hasAttribute('data-listener-added')) {
            utils.on(nextBtn, 'click', (event) => {
                event.preventDefault();
                event.stopPropagation();
                console.log('üîΩ –ö–Ω–æ–ø–∫–∞ "–í–ø–µ—Ä–µ–¥" –Ω–∞–∂–∞—Ç–∞');
                this.navigateChapter(1);
            });
            nextBtn.setAttribute('data-listener-added', 'true');
        }
        
        // –ó–∞–∫–ª–∞–¥–∫–∏ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
        utils.on(utils.get('bookmarkBtn'), 'click', () => this.toggleBookmark());
        utils.on(utils.get('saveProgressBtn'), 'click', () => this.saveProgress());
        utils.on(utils.get('backToLibraryBtn'), 'click', () => this.backToLibrary());
        
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —á—Ç–µ–Ω–∏—è
        utils.on(utils.get('fontFamily'), 'change', (e) => this.updateSetting('fontFamily', e.target.value));
        utils.on(utils.get('lineHeight'), 'change', (e) => this.updateSetting('lineHeight', parseFloat(e.target.value)));
        utils.on(utils.get('textAlign'), 'change', (e) => this.updateSetting('textAlign', e.target.value));
        utils.on(utils.get('marginSize'), 'change', (e) => this.updateSetting('marginSize', e.target.value));
        
        // –û—Ç–∫—Ä—ã—Ç–∏–µ/–∑–∞–∫—Ä—ã—Ç–∏–µ –ø–∞–Ω–µ–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        utils.on(utils.get('settingsToggle'), 'click', () => this.toggleSettingsPanel());
        utils.on(utils.get('closeSettings'), 'click', () => this.closeSettingsPanel());
    },
    
loadBook: async function(bookId) {
    try {
        console.log(`üìñ –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–Ω–∏–≥—É ID: ${bookId}`);
        const bookData = await bookManager.loadBookContent(bookId);
        
        if (bookData) {
            this.currentBook = bookData;
            // –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            this.currentBook.pages = this.splitIntoPages(bookData.content);
            this.settings.currentPage = 0;
            
            this.displayBook();
            this.applySettings();
            this.showReaderUI();
            
            console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–∞ –∫–Ω–∏–≥–∞: "${bookData.title}" (${this.currentBook.pages.length} —Å—Ç—Ä–∞–Ω–∏—Ü)`);
            authManager.showNotification(`–ó–∞–≥—Ä—É–∂–µ–Ω–∞ –∫–Ω–∏–≥–∞: ${bookData.title}`, 'success');
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–Ω–∏–≥–∏:', error);
        authManager.showNotification('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–Ω–∏–≥–∏', 'error');
    }
},
    
    showReaderUI: function() {
        const librarySection = document.getElementById('librarySection');
        const readerSection = document.getElementById('readerSection');
        
        if (librarySection) librarySection.style.display = 'none';
        if (readerSection) readerSection.style.display = 'block';
        
        window.scrollTo(0, 0);
    },

   displayCurrentChapter: function() {
        if (!this.currentBook || !this.currentBook.chapters) return;
        
        const chapter = this.currentBook.chapters[this.currentBook.currentChapter];
        if (!chapter) return;
        
        utils.get('chapterTitle').textContent = chapter.title;
        utils.get('textContent').innerHTML = this.formatChapterContent(chapter.content);
        utils.get('chapterInfo').textContent = 
            `–ì–ª–∞–≤–∞ ${this.currentBook.currentChapter + 1} –∏–∑ ${this.currentBook.chapters.length}`;
        
        this.updateProgress();
    },

    // –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –∏–Ω—Ñ–æ
    displayCurrentPage: function() {

        console.log('üéØ displayCurrentPage –≤—ã–∑–≤–∞–Ω–∞');
        // if (!this.currentBook) {
        //     console.log('‚ùå –ù–µ—Ç currentBook');
        //     return;
        // }
        
        // if (!this.currentBook.pages) {
        //     console.log('‚ùå –ù–µ—Ç pages –≤ currentBook');
        //     return;
        // }
        
        const page = this.currentBook.pages[this.settings.currentPage];
        // if (!page) {
        //     console.log('‚ùå –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞:', this.settings.currentPage);
        //     return;
        // }
        console.log('üìñ –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É:', page.number);
        
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        const chapterTitle = utils.get('chapterTitle');
        const textContent = utils.get('textContent');
        const chapterInfo = utils.get('chapterInfo');
        
        if (chapterTitle) {
            chapterTitle.textContent = `–°—Ç—Ä–∞–Ω–∏—Ü–∞ ${page.number}`;
        }
        
        if (textContent) {
            textContent.innerHTML = this.formatPageContent(page.content);
        }
        
        if (chapterInfo) {
            chapterInfo.textContent = `–°—Ç—Ä–∞–Ω–∏—Ü–∞ ${page.number} –∏–∑ ${this.currentBook.pages.length}`;
        }
        
        // this.updateProgress();
    },

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
formatPageContent: function(content) {
    if (!content) return '<p>–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç</p>';
    
    // –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ –∞–±–∑–∞—Ü—ã –ø–æ –ø—É—Å—Ç—ã–º —Å—Ç—Ä–æ–∫–∞–º
    const paragraphs = content.split(/\n\s*\n/);
    
    return paragraphs.map(paragraph => {
        const trimmed = paragraph.trim();
        if (!trimmed) return '';
        
        // –û—á–∏—â–∞–µ–º –æ—Ç –ª–∏—à–Ω–∏—Ö –ø–µ—Ä–µ–Ω–æ—Å–æ–≤ –≤–Ω—É—Ç—Ä–∏ –∞–±–∑–∞—Ü–∞
        const cleanText = trimmed.split('\n')
            .map(line => line.trim())
            .filter(line => line.length > 0)
            .join(' ');
        
        return `<p>${cleanText}</p>`;
    }).join('');
},
    
  formatChapterContent: function(content) {
    if (!content) return '<p>–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –≥–ª–∞–≤—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç</p>';
    
    // –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ –∞–±–∑–∞—Ü—ã –ø–æ –ø—É—Å—Ç—ã–º —Å—Ç—Ä–æ–∫–∞–º (–¥–≤–æ–π–Ω–æ–π –ø–µ—Ä–µ–Ω–æ—Å)
    const paragraphs = content.split(/\n\s*\n/);
    
    return paragraphs.map(paragraph => {
        const trimmed = paragraph.trim();
        if (!trimmed) return '';
        
        // –û—á–∏—â–∞–µ–º paragraph –æ—Ç –ª–∏—à–Ω–∏—Ö –ø–µ—Ä–µ–Ω–æ—Å–æ–≤ –≤–Ω—É—Ç—Ä–∏
        const cleanText = trimmed.split('\n')
            .map(line => line.trim())
            .filter(line => line.length > 0)
            .join(' ');
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
        const isHeading = cleanText.length < 100 && 
                        !cleanText.match(/[a-z–∞-—è]/) && 
                        cleanText.match(/[–ê-–ØA-Z]/);
        
        if (isHeading) {
            return `<h3 class="chapter-subtitle">${cleanText}</h3>`;
        }
        
        return `<p>${cleanText}</p>`;
    }).join('');
},
//     // –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–Ω–∏–≥–µ
// displayBook: function() {
//     if (!this.currentBook) return;
    
//     // –û–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–Ω–∏–≥–µ
//     utils.get('bookTitle').textContent = this.currentBook.title;
//     utils.get('bookAuthor').textContent = this.currentBook.author;
    
//     // –ï—Å–ª–∏ –µ—Å—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
//     if (utils.get('bookYear')) {
//         utils.get('bookYear').textContent = this.currentBook.year || '';
//     }
//     if (utils.get('bookGenre')) {
//         utils.get('bookGenre').textContent = this.currentBook.genre || '';
//     }
    
//     // –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –≤–µ—Å—å —Ç–µ–∫—Å—Ç –∫–Ω–∏–≥–∏
//     this.displayBookContent();
// },

    displayBook: function() {
        if (!this.currentBook) return;
        
        // –û–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–Ω–∏–≥–µ
        const bookTitle = utils.get('bookTitle');
        const bookAuthor = utils.get('bookAuthor');
        const bookYear = utils.get('bookYear');
        const bookGenre = utils.get('bookGenre');
        
        if (bookTitle) bookTitle.textContent = this.currentBook.title;
        if (bookAuthor) bookAuthor.textContent = this.currentBook.author;
        if (bookYear) bookYear.textContent = this.currentBook.year || '';
        if (bookGenre) bookGenre.textContent = this.currentBook.genre || '';
        
        // –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –ø–µ—Ä–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        this.displayCurrentPage();
    },
    
    // –†–∞–∑–±–∏—Ç—å –∫–Ω–∏–≥—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
splitIntoPages: function(content) {
    if (!content) return [];
    
    const pages = [];
    const charsPerPage = this.settings.charsPerPage;
    let currentPosition = 0;
    
    while (currentPosition < content.length) {
        // –ë–µ—Ä–µ–º –∫—É—Å–æ–∫ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        let pageEnd = currentPosition + charsPerPage;
        
        // –ï—Å–ª–∏ –Ω–µ –∫–æ–Ω–µ—Ü –∫–Ω–∏–≥–∏, –∏—â–µ–º —É–¥–æ–±–Ω–æ–µ –º–µ—Å—Ç–æ –¥–ª—è —Ä–∞–∑—Ä—ã–≤–∞
        if (pageEnd < content.length) {
            // –ò—â–µ–º –∫–æ–Ω–µ—Ü –∞–±–∑–∞—Ü–∞ –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
            const nextParagraph = content.indexOf('\n\n', currentPosition);
            const nextSentence = content.search(/[.!?]\s+[–ê-–ØA-Z]/, currentPosition);
            
            if (nextParagraph > currentPosition && nextParagraph < pageEnd + 500) {
                pageEnd = nextParagraph + 2; // +2 –¥–ª—è \n\n
            } else if (nextSentence > currentPosition && nextSentence < pageEnd + 200) {
                pageEnd = nextSentence + 2; // +2 –¥–ª—è —Ç–æ—á–∫–∏ –∏ –ø—Ä–æ–±–µ–ª–∞
            } else {
                // –ò—â–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø—Ä–æ–±–µ–ª –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                const lastSpace = content.lastIndexOf(' ', pageEnd);
                if (lastSpace > currentPosition) {
                    pageEnd = lastSpace;
                }
            }
        } else {
            pageEnd = content.length;
        }
        
        const pageContent = content.substring(currentPosition, pageEnd).trim();
        if (pageContent) {
            pages.push({
                number: pages.length + 1,
                content: pageContent,
                startPos: currentPosition,
                endPos: pageEnd
            });
        }
        
        currentPosition = pageEnd;
    }
    
    this.settings.totalPages = pages.length;
    return pages;
},

    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ–≥–æ —Ç–µ–∫—Å—Ç–∞ –∫–Ω–∏–≥–∏
    formatBookContent: function(content) {
        if (!content) return '<p>–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –∫–Ω–∏–≥–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç</p>';
        
        // –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ –∞–±–∑–∞—Ü—ã –ø–æ –ø—É—Å—Ç—ã–º —Å—Ç—Ä–æ–∫–∞–º
        const paragraphs = content.split(/\n\s*\n/);
        
        return paragraphs.map(paragraph => {
            const trimmed = paragraph.trim();
            if (!trimmed) return '';
            
            // –û—á–∏—â–∞–µ–º –æ—Ç –ª–∏—à–Ω–∏—Ö –ø–µ—Ä–µ–Ω–æ—Å–æ–≤ –≤–Ω—É—Ç—Ä–∏ –∞–±–∑–∞—Ü–∞
            const cleanText = trimmed.split('\n')
                .map(line => line.trim())
                .filter(line => line.length > 0)
                .join(' ');
            
            return `<p>${cleanText}</p>`;
        }).join('');
    },
    
    // // –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –≥–ª–∞–≤–∞–º
    // navigateChapter: function(direction) {
    //     if (!this.currentBook) return;
        
    //     const newChapter = this.currentBook.currentChapter + direction;
    //     if (newChapter >= 0 && newChapter < this.currentBook.chapters.length) {
    //         this.currentBook.currentChapter = newChapter;
    //         this.displayCurrentChapter();
    //         this.saveProgress();
    //         this.updateProgress();
    //     }
    // },

    // –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º
    navigateChapter: function(direction) {
        if (!this.currentBook || !this.currentBook.pages) return;
        
        const newPage = this.settings.currentPage + direction;
        if (newPage >= 0 && newPage < this.currentBook.pages.length) {
            this.settings.currentPage = newPage;
            this.displayCurrentPage(); // –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
            this.updateProgress(); // –æ–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
            this.saveProgress(); // —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª–æ–∂–µ–Ω–∏–µ
            this.saveSettings(); // —Å–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        }
    },
    
    
    // –ò–∑–º–µ–Ω–∏—Ç—å —Ä–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞
    changeFontSize: function(change) {
        this.settings.fontSize = Math.max(12, Math.min(24, this.settings.fontSize + change));
        this.applySettings();
        this.saveSettings();
    },
    
    // –û–±–Ω–æ–≤–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É
    updateSetting: function(setting, value) {
        this.settings[setting] = value;
        this.applySettings();
        this.saveSettings();
    },
    
    // –ü—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫ —Ç–µ–∫—Å—Ç—É
    applySettings: function() {
    const textContent = utils.get('textContent');
    if (!textContent) return;
    
    textContent.style.fontSize = `${this.settings.fontSize}px`;
    textContent.style.fontFamily = this.settings.fontFamily;
    textContent.style.lineHeight = this.settings.lineHeight;
    textContent.style.textAlign = this.settings.textAlign;
    textContent.style.margin = this.settings.marginSize;
    
    // –û–±–Ω–æ–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –≤ –ø–∞–Ω–µ–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ (–µ—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç)
    const fontFamilySelect = utils.get('fontFamily');
    const lineHeightSelect = utils.get('lineHeight');
    const textAlignSelect = utils.get('textAlign');
    const marginSizeSelect = utils.get('marginSize');
    
    if (fontFamilySelect) fontFamilySelect.value = this.settings.fontFamily;
    if (lineHeightSelect) lineHeightSelect.value = this.settings.lineHeight;
    if (textAlignSelect) textAlignSelect.value = this.settings.textAlign;
    if (marginSizeSelect) marginSizeSelect.value = this.settings.marginSize;
},
    
    // –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –∑–∞–∫–ª–∞–¥–∫—É
    toggleBookmark: function() {
        if (!this.currentBook) return;
        
        const bookmarkBtn = utils.get('bookmarkBtn');
        const isBookmarked = bookmarkBtn.classList.contains('bookmarked');
        
        if (isBookmarked) {
            bookmarkBtn.classList.remove('bookmarked');
            bookmarkBtn.title = '–î–æ–±–∞–≤–∏—Ç—å –∑–∞–∫–ª–∞–¥–∫—É';
            // –£–¥–∞–ª–∏—Ç—å –∑–∞–∫–ª–∞–¥–∫—É
        } else {
            bookmarkBtn.classList.add('bookmarked');
            bookmarkBtn.title = '–£–¥–∞–ª–∏—Ç—å –∑–∞–∫–ª–∞–¥–∫—É';
            // –î–æ–±–∞–≤–∏—Ç—å –∑–∞–∫–ª–∞–¥–∫—É
        }
        
        authManager.showNotification(
            isBookmarked ? '–ó–∞–∫–ª–∞–¥–∫–∞ —É–¥–∞–ª–µ–Ω–∞' : '–ó–∞–∫–ª–∞–¥–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞',
            'success'
        );
    },
    
    // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å
    saveProgress: function() {
        if (!this.currentBook) return;
        
        const progress = {
            bookId: this.currentBook.id,
            progress: this.readingProgress,
            currentPage: this.settings.currentPage,
            timestamp: new Date().toISOString()
        };
        
        utils.saveToStorage(`progress-${this.currentBook.id}`, progress);
    },
    

    
    // –û–±–Ω–æ–≤–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
    updateProgress: function() {
        if (!this.currentBook || !this.currentBook.pages) return;
        
        // –ü—Ä–æ–≥—Ä–µ—Å—Å = —Ç–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ / –≤—Å–µ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü
        this.readingProgress = this.currentBook.pages.length > 0 ? 
            this.settings.currentPage / this.currentBook.pages.length : 0;
        
        const progressFill = utils.get('progressFill');
        const progressText = utils.get('progressText');
        
        if (progressFill) {
            progressFill.style.width = `${this.readingProgress * 100}%`;
        }
        
        if (progressText) {
            progressText.textContent = `–ü—Ä–æ–≥—Ä–µ—Å—Å: ${Math.round(this.readingProgress * 100)}% (${this.settings.currentPage + 1}/${this.currentBook.pages.length} —Å—Ç—Ä.)`;
        }
    },
    
    // –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –ø–∞–Ω–µ–ª—å –Ω–∞—Å—Ç—Ä–æ–µ–∫
    toggleSettingsPanel: function() {
        const settingsPanel = utils.get('settingsPanel');
        settingsPanel.classList.toggle('active');
    },
    
    // –ó–∞–∫—Ä—ã—Ç—å –ø–∞–Ω–µ–ª—å –Ω–∞—Å—Ç—Ä–æ–µ–∫
    closeSettingsPanel: function() {
        const settingsPanel = utils.get('settingsPanel');
        settingsPanel.classList.remove('active');
    },
    
    // –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ
    backToLibrary: function() {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–µ—Ä–µ–¥ –≤—ã—Ö–æ–¥–æ–º
        this.saveProgress();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É
        if (typeof libraryManager !== 'undefined') {
            libraryManager.showLibrary();
        }
        
        authManager.showNotification('–ü—Ä–æ–≥—Ä–µ—Å—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω', 'success');
    }
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑ app.js