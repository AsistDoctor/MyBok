// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π –∫–Ω–∏–≥
const libraryManager = {
    // –í—Å–µ –∫–Ω–∏–≥–∏ –∏ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ
    allBooks: [],
    filteredBooks: [],

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    init: function () {
        this.setupEventListeners();
        this.loadAndDisplayBooks();
        console.log('üìö LibraryManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    },

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
    setupEventListeners: function () {
        // –ü–æ–∏—Å–∫
        const searchInput = utils.get('searchInput');
        if (searchInput) {
            utils.on(searchInput, 'input', utils.debounce((e) => {
                this.filterBooks();
            }, 300));
        }

        // –§–∏–ª—å—Ç—Ä –ø–æ –∂–∞–Ω—Ä—É
        const genreFilter = utils.get('genreFilter');
        if (genreFilter) {
            utils.on(genreFilter, 'change', () => {
                this.filterBooks();
            });
        }

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–æ–≤ –ø–æ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        const libraryLink = document.querySelector('a[href="#library"]');
        if (libraryLink) {
            utils.on(libraryLink, 'click', (e) => {
                e.preventDefault();
                this.showLibrary();
            });
        }
    },

    // –ó–∞–≥—Ä—É–∑–∏—Ç—å –∏ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –∫–Ω–∏–≥–∏
    loadAndDisplayBooks: async function () {
        this.showLoading(true);

        try {
            this.allBooks = await bookManager.loadBooks();
            this.filteredBooks = [...this.allBooks];
            this.displayBooks();
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏:', error);
            this.showError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫—É –∫–Ω–∏–≥');
        } finally {
            this.showLoading(false);
        }
    },

    // –ü–æ–∫–∞–∑–∞—Ç—å/—Å–∫—Ä—ã—Ç—å –∑–∞–≥—Ä—É–∑–∫—É
    showLoading: function (show) {
        const loading = utils.get('libraryLoading');
        if (loading) {
            loading.style.display = show ? 'block' : 'none';
        }
    },

    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∫–Ω–∏–≥
    filterBooks: function () {
        const searchQuery = utils.get('searchInput')?.value.toLowerCase() || '';
        const selectedGenre = utils.get('genreFilter')?.value || '';

        this.filteredBooks = this.allBooks.filter(book => {
            const matchesSearch = !searchQuery ||
                book.title.toLowerCase().includes(searchQuery) ||
                book.author.toLowerCase().includes(searchQuery);

            const matchesGenre = !selectedGenre || book.genre === selectedGenre;

            return matchesSearch && matchesGenre;
        });

        this.displayBooks();
    },

    // –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –∫–Ω–∏–≥–∏
    displayBooks: function () {
        const booksGrid = utils.get('booksGrid');
        if (!booksGrid) return;

        if (this.filteredBooks.length === 0) {
            booksGrid.innerHTML = `
                <div class="no-books">
                    <h3>–ö–Ω–∏–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
                    <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞</p>
                </div>
            `;
            return;
        }

        booksGrid.innerHTML = this.filteredBooks.map(book => this.createBookCard(book)).join('');

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫
        this.attachBookEventListeners();
    },

    // –°–æ–∑–¥–∞—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É –∫–Ω–∏–≥–∏
    createBookCard: function (book) {
        const description = book.description || '–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç';
        const shortDescription = description.length > 120 ?
            description.substring(0, 120) + '...' : description;

        return `
            <div class="book-card" data-book-id="${book.id}">
                <div class="book-cover">
                    <div class="book-cover-placeholder">üìñ</div>
                </div>
                <div class="book-info">
                    <h3>${book.title}</h3>
                    <div class="book-author">${book.author}</div>
                    <div class="book-meta">
                        <span class="book-genre">${book.genre}</span>
                        <span class="book-year">${book.year}</span>
                    </div>
                    <div class="book-description">${shortDescription}</div>
                    <div class="book-actions">
                        <button class="btn-read" data-book-id="${book.id}">
                            üìñ –ß–∏—Ç–∞—Ç—å
                        </button>
                        <button class="btn-info" data-book-id="${book.id}" title="–ü–æ–¥—Ä–æ–±–Ω–µ–µ">
                            ‚ÑπÔ∏è
                        </button>
                    </div>
                </div>
            </div>
        `;
    },

    // –î–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∫–Ω–∏–≥
    attachBookEventListeners: function () {
        // –ö–Ω–æ–ø–∫–∏ "–ß–∏—Ç–∞—Ç—å"
        document.querySelectorAll('.btn-read').forEach(btn => {
            utils.on(btn, 'click', (e) => {
                e.stopPropagation();
                const bookId = parseInt(btn.dataset.bookId);
                this.startReading(bookId);
            });
        });

        // –ö–Ω–æ–ø–∫–∏ "–ü–æ–¥—Ä–æ–±–Ω–µ–µ"
        document.querySelectorAll('.btn-info').forEach(btn => {
            utils.on(btn, 'click', (e) => {
                e.stopPropagation();
                const bookId = parseInt(btn.dataset.bookId);
                this.showBookInfo(bookId);
            });
        });

        // –ö–ª–∏–∫ –ø–æ –∫–∞—Ä—Ç–æ—á–∫–µ –∫–Ω–∏–≥–∏
        document.querySelectorAll('.book-card').forEach(card => {
            utils.on(card, 'click', () => {
                const bookId = parseInt(card.dataset.bookId);
                this.startReading(bookId);
            });
        });
    },

    // –ù–∞—á–∞—Ç—å —á—Ç–µ–Ω–∏–µ –∫–Ω–∏–≥–∏
    startReading: function (bookId) {
        console.log(`üìñ –ù–∞—á–∏–Ω–∞–µ–º —á—Ç–µ–Ω–∏–µ –∫–Ω–∏–≥–∏ ID: ${bookId}`);

        // –°–∫—Ä—ã–≤–∞–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —á–∏—Ç–∞–ª–∫—É
        this.hideLibrary();

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–Ω–∏–≥—É –≤ —á–∏—Ç–∞–ª–∫—É
        readerManager.loadBook(bookId);

        authManager.showNotification('–ó–∞–≥—Ä—É–∂–∞–µ–º –∫–Ω–∏–≥—É...', 'info');
    },

    // –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–Ω–∏–≥–µ
    showBookInfo: function (bookId) {
        const book = this.allBooks.find(b => b.id === bookId);
        if (!book) return;

        const info = `
            üìñ ${book.title}
            ‚úçÔ∏è ${book.author}
            üìÖ ${book.year}
            üìö ${book.genre}
            üìÑ ${book.chapters} –≥–ª–∞–≤
            
            ${book.description || '–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}
        `;

        alert(info); // –í—Ä–µ–º–µ–Ω–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º alert, –ø–æ—Ç–æ–º –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –∫—Ä–∞—Å–∏–≤–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    },

    // –ü–æ–∫–∞–∑–∞—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫—É
    showLibrary: function () {
        const librarySection = utils.get('librarySection');
        const readingSection = utils.get('readingSection');

        if (librarySection) librarySection.style.display = 'block';
        if (readingSection) readingSection.style.display = 'none';

        // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
        this.updateNavigation('library');

        window.scrollTo(0, 0);
    },

    // –°–∫—Ä—ã—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫—É
    hideLibrary: function () {
        const librarySection = utils.get('librarySection');
        const readingSection = utils.get('readingSection');

        if (librarySection) librarySection.style.display = 'none';
        if (readingSection) readingSection.style.display = 'block';

        // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
        this.updateNavigation('reading');
    },

    // –û–±–Ω–æ–≤–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—É—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é
    updateNavigation: function (section) {
        // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —Å–æ –≤—Å–µ—Ö —Å—Å—ã–ª–æ–∫
        document.querySelectorAll('.nav-link').forEach(link => {
            link.classList.remove('active');
        });

        // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å –Ω—É–∂–Ω–æ–π —Å—Å—ã–ª–∫–µ
        const activeLink = document.querySelector(`a[href="#${section}"]`);
        if (activeLink) {
            activeLink.classList.add('active');
        }
    },

    // –ü–æ–∫–∞–∑–∞—Ç—å –æ—à–∏–±–∫—É
    showError: function (message) {
        const booksGrid = utils.get('booksGrid');
        if (booksGrid) {
            booksGrid.innerHTML = `
                <div class="no-books">
                    <h3>‚ùå –û—à–∏–±–∫–∞</h3>
                    <p>${message}</p>
                </div>
            `;
        }
    }
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑ app.js